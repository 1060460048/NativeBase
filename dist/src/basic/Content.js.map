{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","variables","context","theme","platformStyle","platform","props","disableKBDismissScroll","x","y","c","_scrollview","_root","children","contextTypes","PropTypes","object","propTypes","style","contentContainerStyle","padder","bool","enableResetScrollToCoords","StyledContent"],"mappings":"izBAAA,4B;AACA;AACA;AACA;AACA,mE;AACA,qD;;AAEMA,O;;;;;AAKK;AACP,GAAMC,WAAa,KAAKC,OAAL,CAAaC,KAAd,CAAuB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAxE,mBAAlB;AACA,GAAMG,eAAgBH,UAAUG,aAAhC;AACA,GAAMC,UAAWJ,UAAUI,QAA3B;AACA,GAAIA,WAAa,KAAjB,CAAwB;AACtB;AACE;AACE,iCAAkC,KADpC;AAEE,oBAAsB,KAAKC,KAAL,CAAWC,sBAAZ,CAAsC,IAAtC,CAA6C,CAAEC,EAAG,CAAL,CAAQC,EAAG,CAAX,CAFpE;AAGE,IAAK,aAACC,CAAD,CAAO,CAAE,OAAKC,WAAL,CAAmBD,CAAnB,CAAsB,OAAKE,KAAL,CAAaF,CAAb,CAAiB,CAHvD;AAIM,KAAKJ,KAJX;;AAMG,KAAKA,KAAL,CAAWO,QANd,CADF;;;AAUD,CAXD;AAYK;AACH;AACE;AACE,IAAK,aAACH,CAAD,CAAO,CAAE,OAAKC,WAAL,CAAmBD,CAAnB,CAAsB,OAAKE,KAAL,CAAaF,CAAb,CAAiB,CADvD;AAEM,KAAKJ,KAFX;;AAIG,KAAKA,KAAL,CAAWO,QAJd,CADF;;;AAQD;AACF,C,uCA/BGb,O,CACGc,Y,CAAe,CACpBX,MAAO,gBAAMY,SAAN,CAAgBC,MADH,C;;;AAiCxBhB,QAAQiB,SAAR;AACK,4DAAwBA,SAD7B;AAEEC,MAAO,gBAAMH,SAAN,CAAgBC,MAFzB;AAGEG,sBAAuB,gBAAMJ,SAAN,CAAgBC,MAHzC;AAIEI,OAAQ,gBAAML,SAAN,CAAgBM,IAJ1B;AAKEd,uBAAwB,gBAAMQ,SAAN,CAAgBM,IAL1C;AAMEC,0BAA2B,gBAAMP,SAAN,CAAgBM,IAN7C;;;AASA,GAAME,eAAgB,wBAAa,oBAAb,CAAmC,EAAnC,iCAA6DvB,OAA7D,CAAtB,C;;;AAGmBA,O,CAAjBuB,a","file":"Content.js","sourcesContent":["import React, { Component } from 'react';\nimport { ScrollView } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { connectStyle } from '@shoutem/theme';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object,\n  }\n\n  render() {\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n    if (platform !== 'web') {\n      return (\n        <KeyboardAwareScrollView\n          automaticallyAdjustContentInsets={false}\n          resetScrollToCoords={(this.props.disableKBDismissScroll) ? null : { x: 0, y: 0 }}\n          ref={(c) => { this._scrollview = c; this._root = c; }}\n          {...this.props}\n          >\n          {this.props.children}\n        </KeyboardAwareScrollView>\n      );\n    }\n    else {\n      return (\n        <ScrollView\n          ref={(c) => { this._scrollview = c; this._root = c; }}\n          {...this.props}\n          >\n          {this.props.children}\n        </ScrollView>\n      )\n    }\n  }\n}\n\nContent.propTypes = {\n  ...KeyboardAwareScrollView.propTypes,\n  style: React.PropTypes.object,\n  contentContainerStyle: React.PropTypes.object,\n  padder: React.PropTypes.bool,\n  disableKBDismissScroll: React.PropTypes.bool,\n  enableResetScrollToCoords: React.PropTypes.bool\n};\n\nconst StyledContent = connectStyle('NativeBase.Content', {}, mapPropsToStyleNames)(Content);\n\nexport {\n  StyledContent as Content,\n};\n"]}