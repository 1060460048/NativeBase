{"version":3,"sources":["../../../src/basic/Actionsheet.js"],"names":["ActionSheetContainer","config","callback","actionsheetInstance","_root","showActionSheet","props","state","modalVisible","items","autoHide","duration","console","warn","OS","options","filtered","map","item","text","showActionSheetWithOptions","setState","title","message","destructiveButtonIndex","cancelButtonIndex","backgroundColor","flex","justifyContent","height","length","padding","elevation","color","marginHorizontal","marginTop","data","i","id","borderColor","icon","propTypes","style","PropTypes","object","StyledActionSheetContainer"],"mappings":"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","file":"Actionsheet.js","sourcesContent":["/* @flow */\n\n\nimport React, { Component } from 'react';\nimport { View, Modal, Platform, ActionSheetIOS, TouchableOpacity } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport { Text } from './Text';\nimport { Icon } from './Icon';\nimport { Left } from './Left';\nimport { Right } from './Right';\nimport { Body } from './Body';\nimport { List } from './List';\nimport { ListItem } from './ListItem';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\n\nclass ActionSheetContainer extends Component {\n  static actionsheetInstance;\n  static show(config, callback) {\n    this.actionsheetInstance._root.showActionSheet(config, callback);\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      items: [],\n    }\n  }\n  componentDidMount() {\n    if (!this.props.autoHide && this.props.duration) {\n      console.warn('It\\'s not recommended to set autoHide false with duration');\n    }\n  }\n  showActionSheet(config, callback) {\n    if (Platform.OS === 'ios') {\n      if (typeof config.options[0] === 'object') {\n        const options = config.options;\n        const filtered = options.map(item => item.text);\n        config.options = filtered;\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\n      } else {\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\n      }\n    } else {\n      this.setState({\n        items: config.options,\n        title: config.title,\n        message: config.message,\n        destructiveButtonIndex: config.destructiveButtonIndex,\n        cancelButtonIndex: config.cancelButtonIndex,\n        modalVisible: true,\n        callback,\n      });\n    }\n  }\n  render() {\n    return (\n      <Modal\n        animationType={'fade'}\n        transparent\n        visible={this.state.modalVisible}\n        onRequestClose={() => this.setState({ modalVisible: false })}\n      >\n        <TouchableOpacity activeOpacity={1} onPress={() => this.setState({ modalVisible: false })} style={{ backgroundColor: 'rgba(0,0,0,0.4)', flex: 1, justifyContent: 'flex-end' }}>\n          <TouchableOpacity activeOpacity={1} style={{ backgroundColor: '#fff', height: this.state.length * 80, padding: 15, elevation: 4 }}>\n            <Text style={{ color: '#757575' }}>{this.state.title}</Text>\n            <List\n              style={{ marginHorizontal: -15, marginTop: 15 }}\n              dataArray={this.state.items}\n              renderRow={(data, i, id) => (typeof this.state.items[0] === 'string') ?\n                <ListItem onPress={() => { this.state.callback(id); this.setState({ modalVisible: false }); }} style={{ borderColor: 'transparent' }}>\n                  <Text>{data}</Text>\n                </ListItem>\n              :\n                <ListItem onPress={() => { this.state.callback(id); this.setState({ modalVisible: false }); }} style={{ borderColor: 'transparent' }} icon>\n                  <Left>\n                    <Icon name={data.icon} />\n                  </Left>\n                  <Body style={{ borderColor: 'transparent' }}>\n                    <Text>{data.text}</Text>\n                  </Body>\n                  <Right />\n                </ListItem>\n            }\n            />\n          </TouchableOpacity>\n        </TouchableOpacity>\n      </Modal>\n    );\n  }\n}\n\nActionSheetContainer.propTypes = {\n  ...View.propTypes,\n  style: React.PropTypes.object,\n};\n\nconst StyledActionSheetContainer = connectStyle('NativeBase.ActionSheetContainer', {}, mapPropsToStyleNames)(ActionSheetContainer);\n\nexport {\n  StyledActionSheetContainer as ActionSheetContainer,\n};\n"]}