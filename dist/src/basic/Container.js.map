{"version":3,"sources":["../../../src/basic/Container.js"],"names":["Container","variables","context","theme","platformStyle","platform","_root","c","props","children","toastInstance","actionsheetInstance","contextTypes","PropTypes","object","propTypes","style","StyledContainer"],"mappings":"mzBAAA,4B;AACA;;AAEA;AACA,mE;AACA;AACA;AACA;AACA,qD;;AAEMA,S;;;;;AAKK;AACP,GAAMC,WAAa,KAAKC,OAAL,CAAaC,KAAd,CAAuB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAxE,mBAAlB;AACA,GAAMG,eAAgBH,UAAUG,aAAhC;AACA,GAAMC,UAAWJ,UAAUI,QAA3B;;AAEA;AACE,0DAAM,IAAK,sBAAK,QAAKC,KAAL,CAAaC,CAAlB,EAAX,EAAoC,KAAKC,KAAzC;AACG,KAAKA,KAAL,CAAWC,QADd;AAEIJ,WAAa,KAAd,EAAwB,8DAAO,IAAM,aAACE,CAAD,CAAO,CAAC,+BAAMG,aAAN,CAAsBH,CAAtB,CAAyB,CAA9C,EAF3B;AAGIF,WAAa,KAAd,EAAwB,iEAAa,IAAM,aAACE,CAAD,CAAO,CAAC,kCAAYI,mBAAZ,CAAkCJ,CAAlC,CAAqC,CAAhE,EAH3B,CADF;;;AAOD,C,yCAjBGP,S,CACGY,Y,CAAe,CACpBT,MAAO,gBAAMU,SAAN,CAAgBC,MADH,C;;;AAmBxBd,UAAUe,SAAV;AACK,kBAAKA,SADV;AAEEC,MAAO,gBAAMH,SAAN,CAAgBC,MAFzB;;;AAKA,GAAMG,iBAAkB,wBAAa,sBAAb,CAAqC,EAArC,iCAA+DjB,SAA/D,CAAxB,C;;;AAGqBA,S,CAAnBiB,e","file":"Container.js","sourcesContent":["import React, { Component } from 'react';\nimport { View } from 'react-native';\n\nimport { connectStyle } from '@shoutem/theme';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\nimport {ToastContainer as Toast} from './ToastContainer';\nimport {ActionSheetContainer as ActionSheet} from './Actionsheet';\nimport {Text} from './Text';\nimport variable from '../theme/variables/platform';\n\nclass Container extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object,\n  }\n\n  render() {\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n\n    return (\n      <View ref={c => this._root = c} {...this.props}>\n        {this.props.children}\n        {(platform !== 'web') && <Toast ref={ (c) => {Toast.toastInstance = c;}} />}\n        {(platform !== 'web') && <ActionSheet ref={ (c) => {ActionSheet.actionsheetInstance = c;}} />}\n      </View>\n    );\n  }\n}\n\nContainer.propTypes = {\n  ...View.propTypes,\n  style: React.PropTypes.object,\n};\n\nconst StyledContainer = connectStyle('NativeBase.Container', {}, mapPropsToStyleNames)(Container);\n\nexport {\n  StyledContainer as Container,\n};\n"]}