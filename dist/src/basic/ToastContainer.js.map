{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["ToastContainer","config","toastInstance","_root","showToast","props","state","modalVisible","autoHide","duration","console","warn","setState","text","buttonText","type","position","setTimeout","margin","OS","flex","justifyContent","propTypes","style","PropTypes","object","StyledToastContainer"],"mappings":";;;AAGA,4B;AACA;AACA;AACA;AACA;AACA;AACA,mE;;;AAGMA,c;;AAEuB,IAAVC,OAAU;AACzB,KAAKC,aAAL,CAAmBC,KAAnB,CAAyBC,SAAzB,CAAmC,CAAEH,aAAF,CAAnC;AACD,C;AACD,wBAAYI,KAAZ,CAAmB;AACXA,KADW;AAEjB,MAAKC,KAAL,CAAa;AACXC,aAAc,KADH,CAAb,CAFiB;;AAKlB,C;AACmB;AAClB,GAAI,CAAC,KAAKF,KAAL,CAAWG,QAAZ,EAAwB,KAAKH,KAAL,CAAWI,QAAvC,CAAiD;AAC/CC,QAAQC,IAAR,CAAa,2DAAb;AACD;AACF,C;AACqB,oBAAVV,OAAU,OAAVA,MAAU;AACpB,KAAKW,QAAL,CAAc;AACZL,aAAc,IADF;AAEZM,KAAMZ,OAAOY,IAFD;AAGZC,WAAYb,OAAOa,UAHP;AAIZC,KAAMd,OAAOc,IAJD;AAKZC,SAAUf,OAAOe,QALL,CAAd;;AAOA,GAAIf,OAAOQ,QAAP,CAAkB,CAAtB,CAAyB;AACvBQ,WAAW,UAAM;AACf,OAAKL,QAAL,CAAc;AACZL,aAAc,KADF,CAAd;;AAGD,CAJD,CAIGN,OAAOQ,QAJV;AAKD;AACF,C;AACQ;AACP;AACE;AACE,cAAgB,KAAKH,KAAL,CAAWU,QAAX,EAAuB,QAAxB,CAAoC,OAApC,CAA8C,MAD/D;AAEE,YAAa,IAFf;AAGE,QAAS,KAAKV,KAAL,CAAWC,YAHtB;AAIE,eAAgB,yBAAM;AACpB,OAAKK,QAAL,CAAc;AACZL,aAAc,KADF,CAAd;;AAGD,CARH;;AAUE;AACE,MAAO;AACLW,OAAS,sBAASC,EAAT,GAAgB,KAAjB,CAA0B,EAA1B,CAA+B,CADlC;AAELC,KAAM,CAFD;AAGLC,eAAiB,KAAKf,KAAL,CAAWU,QAAX,GAAwB,KAAzB,CAAkC,YAAlC,CAAkD,KAAKV,KAAL,CAAWU,QAAX,GAAwB,QAAzB,CAAqC,UAArC,CAAmD,KAAKV,KAAL,CAAWU,QAAX,GAAwB,QAAzB,CAAqC,QAArC,CAAgD,YAH9J,CADT;;AAME;AACE,OAAS,KAAKV,KAAL,CAAWS,IAAX,EAAmB,QAApB,CAAgC,IAAhC,CAAuC,KADjD;AAEE,QAAU,KAAKT,KAAL,CAAWS,IAAX,EAAmB,SAApB,CAAiC,IAAjC,CAAwC,KAFnD;AAGE,QAAU,KAAKT,KAAL,CAAWS,IAAX,EAAmB,SAApB,CAAiC,IAAjC,CAAwC,KAHnD;;AAKE,8CAAO,KAAKT,KAAL,CAAWO,IAAlB,CALF;AAMI,KAAKP,KAAL,CAAWQ,UAAZ,EAA2B;AAC1B,QAAS,kBAAM;AACb,OAAKF,QAAL,CAAc;AACZL,aAAc,KADF,CAAd;;AAGD,CALyB;;AAO1B,8CAAO,KAAKD,KAAL,CAAWQ,UAAlB,CAP0B,CAN9B,CANF,CAVF,CADF;;;;;;;AAqCD,C;;;AAGHd,eAAesB,SAAf;AACK,kBAAKA,SADV;AAEEC,MAAO,gBAAMC,SAAN,CAAgBC,MAFzB;;;AAKA,GAAMC,sBAAuB,yCAAa,2BAAb,CAA0C,EAA1C,iCAAoE1B,cAApE,CAA7B,C;;;AAG0BA,c,CAAxB0B,oB","file":"ToastContainer.js","sourcesContent":["/* @flow */\n\n\nimport React, { Component } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { Toast } from './Toast';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\n\nclass ToastContainer extends Component {\n  static toastInstance;\n  static show({ ...config }) {\n    this.toastInstance._root.showToast({ config });\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n    };\n  }\n  componentDidMount() {\n    if (!this.props.autoHide && this.props.duration) {\n      console.warn('It\\'s not recommended to set autoHide false with duration');\n    }\n  }\n  showToast({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: config.buttonText,\n      type: config.type,\n      position: config.position,\n    });\n    if (config.duration > 0) {\n      setTimeout(() => {\n        this.setState({\n          modalVisible: false,\n        });\n      }, config.duration);\n    }\n  }\n  render() {\n    return (\n      <Modal\n        animationType={(this.state.position == 'bottom') ? 'slide' : 'fade'}\n        transparent={true}\n        visible={this.state.modalVisible}\n        onRequestClose={() => {\n          this.setState({\n            modalVisible: false\n          });\n        }}\n      >\n        <View\n          style={{\n            margin: (Platform.OS === 'ios') ? 20 : 0,\n            flex: 1,\n            justifyContent: (this.state.position === 'top') ? 'flex-start' : (this.state.position === 'bottom') ? 'flex-end' : (this.state.position === 'center') ? 'center' : 'flex-start' }}\n        >\n          <Toast\n            danger={(this.state.type == 'danger') ? true : false}\n            success={(this.state.type == 'success') ? true : false}\n            warning={(this.state.type == 'warning') ? true : false}\n          >\n            <Text>{this.state.text}</Text>\n            {(this.state.buttonText) && <Button\n              onPress={() => {\n                this.setState({\n                  modalVisible: false\n                });\n              }}\n            >\n              <Text>{this.state.buttonText}</Text>\n            </Button>}\n\n          </Toast>\n        </View>\n      </Modal>\n    );\n  }\n}\n\nToastContainer.propTypes = {\n  ...View.propTypes,\n  style: React.PropTypes.object,\n};\n\nconst StyledToastContainer = connectStyle('NativeBase.ToastContainer', {}, mapPropsToStyleNames)(ToastContainer);\n\nexport {\n  StyledToastContainer as ToastContainer,\n};\n"]}