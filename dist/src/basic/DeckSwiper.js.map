{"version":3,"sources":["../../../src/basic/DeckSwiper.js"],"names":["SWIPE_THRESHOLD","DeckSwiper","props","state","pan","ValueXY","pan2","enter","Value","selectedItem","dataSource","selectedItem2","card1Top","card2Top","fadeAnim","topCard","position","top","right","left","onSwiping","setTimeout","timing","toValue","start","spring","friction","selectNext","decay","velocity","x","y","deceleration","_resetState","bind","_panResponder","create","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","evt","gestureState","Math","abs","dx","onPanResponderGrant","e","setOffset","_value","setValue","onPanResponderMove","val","opa","event","onPanResponderRelease","vx","vy","onSwipeRight","undefined","onSwipeLeft","setState","translateX","translateY","rotate","interpolate","inputRange","outputRange","opacity","scale","animatedCardStyles","transform","animatedCardStyles2","nextIndexes","findNextIndexes","currentIndex","indexOf","newIdx","newIdx2","length","flexDirection","getCardStyles","getInitialStyle","panHandlers","renderBottom","renderItem","renderTop","propTypes","style","PropTypes","object","array","StyledDeckSwiper"],"mappings":"ozBAAA,4B;AACA;AACA,4B;AACA;AACA,mE;;AAEA,GAAMA,iBAAkB,GAAxB,C;;AAEMC,U;AACJ,oBAAYC,KAAZ,CAAmB;AACXA,KADW;AAEjB,MAAKC,KAAL,CAAa;AACXC,IAAK,GAAI,uBAASC,OAAb,EADM;AAEXC,KAAM,GAAI,uBAASD,OAAb,EAFK;AAGXE,MAAO,GAAI,uBAASC,KAAb,CAAmB,GAAnB,CAHI;AAIXC,aAAc,MAAKP,KAAL,CAAWQ,UAAX,CAAsB,CAAtB,CAJH;AAKXC,cAAe,MAAKT,KAAL,CAAWQ,UAAX,CAAsB,CAAtB,CALJ;AAMXE,SAAU,IANC;AAOXC,SAAU,KAPC;AAQXC,SAAU,GAAI,uBAASN,KAAb,CAAmB,GAAnB,CARC,CAAb,CAFiB;;AAYlB,C;;AAEiB;AAChB,MAAO;AACLO,QAAS;AACPC,SAAU,UADH;AAEPC,IAAK,CAFE;AAGPC,MAAO,CAHA;AAIPC,KAAM,CAJC,CADJ,CAAP;;;AAQD,C;;AAEW;AACV,GAAI,KAAKjB,KAAL,CAAWkB,SAAf,CAA0B;AACxB,KAAKlB,KAAL,CAAWkB,SAAX,CAAqB,MAArB;AACD;AACDC,WAAW,UAAM;AACf,sBAASC,MAAT;AACE,OAAKnB,KAAL,CAAWW,QADb;AAEE,CAAES,QAAS,CAAX,CAFF;AAGEC,KAHF;AAIA,sBAASC,MAAT;AACE,OAAKtB,KAAL,CAAWI,KADb;AAEE,CAAEgB,QAAS,CAAX,CAAcG,SAAU,CAAxB,CAFF;AAGEF,KAHF;AAIA,OAAKG,UAAL;AACA,sBAASC,KAAT,CAAe,OAAKzB,KAAL,CAAWC,GAA1B,CAA+B;AAC7ByB,SAAU,CAAEC,EAAG,CAAC,CAAN,CAASC,EAAG,CAAZ,CADmB;AAE7BC,aAAc,IAFe,CAA/B;AAGGR,KAHH,CAGS,OAAKS,WAAL,CAAiBC,IAAjB,QAHT;AAID,CAdD,CAcG,GAdH;AAeD,C;;AAEoB;AACjB,KAAKC,aAAL,CAAqB,0BAAaC,MAAb,CAAoB;AACvCC,gCAAiC,iDAAM,KAAN,EADM;AAEvCC,mCAAoC,4CAACC,GAAD,CAAMC,YAAN,CAAuB;AACzD,MAAOC,MAAKC,GAAL,CAASF,aAAaG,EAAtB,EAA4B,CAAnC;AACD,CAJsC;;AAMvCC,oBAAqB,6BAACC,CAAD,CAAIL,YAAJ,CAAqB;AACxC,OAAKrC,KAAL,CAAWC,GAAX,CAAe0C,SAAf,CAAyB,CAAEhB,EAAG,OAAK3B,KAAL,CAAWC,GAAX,CAAe0B,CAAf,CAAiBiB,MAAtB,CAA8BhB,EAAG,OAAK5B,KAAL,CAAWC,GAAX,CAAe2B,CAAf,CAAiBgB,MAAlD,CAAzB;AACA,OAAK5C,KAAL,CAAWC,GAAX,CAAe4C,QAAf,CAAwB,CAAElB,EAAG,CAAL,CAAQC,EAAG,CAAX,CAAxB;AACD,CATsC;;;AAYvCkB,mBAAoB,4BAACJ,CAAD,CAAIL,YAAJ,CAAqB;AACvC,GAAIA,aAAaG,EAAb,CAAkB,EAAtB,CAA0B;AACxB,GAAI,OAAKzC,KAAL,CAAWkB,SAAf,CAA0B;AACxB,OAAKlB,KAAL,CAAWkB,SAAX,CAAqB,OAArB,CAA8BoB,aAAaG,EAA3C;AACD;AACF,CAJD,IAIO,IAAIH,aAAaG,EAAb,CAAkB,CAAC,EAAvB,CAA2B;AAChC,GAAI,OAAKzC,KAAL,CAAWkB,SAAf,CAA0B;AACxB,OAAKlB,KAAL,CAAWkB,SAAX,CAAqB,MAArB,CAA6BoB,aAAaG,EAA1C;AACD;AACF;AACD,GAAIO,KAAMT,KAAKC,GAAL,CAAUF,aAAaG,EAAb,CAAkB,MAA5B,CAAV;AACA,GAAMQ,KAAMV,KAAKC,GAAL,CAAUF,aAAaG,EAAb,CAAkB,MAA5B,CAAZ;AACA,GAAIO,IAAM,GAAV,CAAe;AACbA,IAAM,GAAN;AACD;AACD,sBAAS5B,MAAT;AACI,OAAKnB,KAAL,CAAWW,QADf;AAEI,CAAES,QAAS,IAAM2B,GAAjB,CAFJ;AAGE1B,KAHF;AAIA,sBAASC,MAAT;AACI,OAAKtB,KAAL,CAAWI,KADf;AAEI,CAAEgB,QAAS,IAAM2B,GAAjB,CAAsBxB,SAAU,CAAhC,CAFJ;AAGEF,KAHF;AAIA,sBAAS4B,KAAT,CAAe;AACb,IADa,CACP,CAAET,GAAI,OAAKxC,KAAL,CAAWC,GAAX,CAAe0B,CAArB,CADO,CAAf;AAEGe,CAFH,CAEML,YAFN;AAGD,CAtCsC;;AAwCvCa,sBAAuB,+BAACR,CAAD,MAAmB,IAAbS,GAAa,MAAbA,EAAa,CAATC,EAAS,MAATA,EAAS;AACxC,GAAI,OAAKrD,KAAL,CAAWkB,SAAf,CAA0B;AACxB,OAAKlB,KAAL,CAAWkB,SAAX,CAAqB,IAArB;AACD;AACD,GAAIS,gBAAJ;;AAEA,GAAIyB,IAAM,CAAV,CAAa;AACXzB,SAAW,oBAAMyB,EAAN,CAAU,GAAV,CAAe,EAAf,CAAX;AACD,CAFD,IAEO,IAAIA,GAAK,CAAT,CAAY;AACjBzB,SAAW,oBAAMyB,GAAK,CAAC,CAAZ,CAAe,GAAf,CAAoB,EAApB,EAA0B,CAAC,CAAtC;AACD;AACD,GAAIb,KAAKC,GAAL,CAAS,OAAKvC,KAAL,CAAWC,GAAX,CAAe0B,CAAf,CAAiBiB,MAA1B,EAAoC/C,eAAxC,CAAyD;AACvD,GAAI6B,SAAW,CAAf,CAAkB;AACf,OAAK3B,KAAL,CAAWsD,YAAZ,CAA4B,OAAKtD,KAAL,CAAWsD,YAAX,EAA5B,CAAwDC,SAAxD;AACA,OAAK9B,UAAL;AACD,CAHD,IAGO;AACJ,OAAKzB,KAAL,CAAWwD,WAAZ,CAA2B,OAAKxD,KAAL,CAAWwD,WAAX,EAA3B,CAAsDD,SAAtD;AACA,OAAK9B,UAAL;AACD;AACD,sBAASC,KAAT,CAAe,OAAKzB,KAAL,CAAWC,GAA1B,CAA+B;AAC7ByB,SAAU,CAAEC,EAAGD,QAAL,CAAeE,EAAGwB,EAAlB,CADmB;AAE7BvB,aAAc,IAFe,CAA/B;AAGGR,KAHH,CAGS,OAAKS,WAAL,CAAiBC,IAAjB,QAHT;AAID,CAZD,IAYO;AACL,sBAAST,MAAT,CAAgB,OAAKtB,KAAL,CAAWC,GAA3B,CAAgC;AAC9BmB,QAAS,CAAEO,EAAG,CAAL,CAAQC,EAAG,CAAX,CADqB;AAE9BL,SAAU,CAFoB,CAAhC;AAGGF,KAHH;AAID;AACF,CArEsC,CAApB,CAArB;;AAuEH,C;;AAEa;AACZ,KAAKrB,KAAL,CAAWC,GAAX,CAAe4C,QAAf,CAAwB,CAAElB,EAAG,CAAL,CAAQC,EAAG,CAAX,CAAxB;AACA,KAAK5B,KAAL,CAAWI,KAAX,CAAiByC,QAAjB,CAA0B,GAA1B;AACA,KAAK7C,KAAL,CAAWW,QAAX,CAAoBkC,QAApB,CAA6B,GAA7B;AACA,KAAKW,QAAL,CAAc;AACZ/C,SAAU,CAAC,KAAKT,KAAL,CAAWS,QADV;AAEZC,SAAU,CAAC,KAAKV,KAAL,CAAWU,QAFV,CAAd;;AAIA,GAAI,KAAKX,KAAL,CAAWkB,SAAf,CAA0B;AACxB,KAAKlB,KAAL,CAAWkB,SAAX,CAAqB,IAArB;AACD;AACF,C;AACe;AACe,KAAKjB,KADpB,CACNC,GADM,QACNA,GADM,CACDE,IADC,QACDA,IADC,CACKC,KADL,QACKA,KADL;;AAGmB,CAACH,IAAI0B,CAAL,CAAQ1B,IAAI2B,CAAZ,CAHnB,CAGP6B,UAHO,UAGKC,UAHL;;;AAMd,GAAMC,QAAS1D,IAAI0B,CAAJ,CAAMiC,WAAN,CAAkB,CAAEC,WAAY,CAAC,CAAC,GAAF,CAAO,CAAP,CAAU,GAAV,CAAd,CAA8BC,YAAa,CAAC,QAAD,CAAW,MAAX,CAAmB,OAAnB,CAA3C,CAAlB,CAAf;;AAEA,GAAMC,SAAU9D,IAAI0B,CAAJ,CAAMiC,WAAN,CAAkB,CAAEC,WAAY,CAAC,CAAC,GAAF,CAAO,CAAP,CAAU,GAAV,CAAd,CAA8BC,YAAa,CAAC,GAAD,CAAM,CAAN,CAAS,GAAT,CAA3C,CAAlB,CAAhB;AACA,GAAME,OAAQ5D,KAAd;;AAEA,GAAM6D,oBAAqB,CAAEC,UAAW,CAAC,CAAET,qBAAF,CAAD,CAAiB,CAAEC,qBAAF,CAAjB,CAAiC,CAAEC,aAAF,CAAjC,CAAb,CAA2DI,eAA3D,CAA3B;AACA,GAAMI,qBAAsB,CAAED,UAAW,CAAC,CAAEF,WAAF,CAAD,CAAb,CAA5B;;AAEA,MAAO,CAACC,kBAAD,CAAqBE,mBAArB,CAAP;AACD,C;AACY;AACX,GAAI,KAAKpE,KAAL,CAAWkB,SAAf,CAA0B;AACxB,KAAKlB,KAAL,CAAWkB,SAAX,CAAqB,OAArB;AACD;AACDC,WAAW,UAAM;AACf,sBAASC,MAAT;AACE,OAAKnB,KAAL,CAAWW,QADb;AAEE,CAAES,QAAS,CAAX,CAFF;AAGEC,KAHF;AAIA,sBAASC,MAAT;AACE,OAAKtB,KAAL,CAAWI,KADb;AAEE,CAAEgB,QAAS,CAAX,CAAcG,SAAU,CAAxB,CAFF;AAGEF,KAHF;AAIA,OAAKG,UAAL;AACA,sBAASC,KAAT,CAAe,OAAKzB,KAAL,CAAWC,GAA1B,CAA+B;AAC7ByB,SAAU,CAAEC,EAAG,CAAL,CAAQC,EAAG,CAAX,CADmB;AAE7BC,aAAc,IAFe,CAA/B;AAGGR,KAHH,CAGS,OAAKS,WAAL,CAAiBC,IAAjB,QAHT;AAID,CAdD,CAcG,GAdH;AAeD,C;AACY;AACX,GAAMqC,aAAc,KAAKC,eAAL,EAApB;AACAnD,WAAW,UAAM;AACf,OAAKsC,QAAL,CAAc;AACZlD,aAAc,OAAKP,KAAL,CAAWQ,UAAX,CAAsB6D,YAAY,CAAZ,CAAtB,CADF,CAAd;;AAGAlD,WAAW,UAAM;AACf,OAAKsC,QAAL,CAAc;AACZhD,cAAe,OAAKT,KAAL,CAAWQ,UAAX,CAAsB6D,YAAY,CAAZ,CAAtB,CADH,CAAd;;AAGD,CAJD,CAIG,GAJH;AAKD,CATD,CASG,EATH;AAUD,C;AACiB;AAChB,GAAME,cAAe,KAAKvE,KAAL,CAAWQ,UAAX,CAAsBgE,OAAtB,CAA8B,KAAKvE,KAAL,CAAWM,YAAzC,CAArB;AACA,GAAMkE,QAASF,aAAe,CAA9B;AACA,GAAMG,SAAUH,aAAe,CAA/B;;AAEA,GAAIG,QAAU,KAAK1E,KAAL,CAAWQ,UAAX,CAAsBmE,MAAtB,CAA+B,CAAzC,EAA8CF,SAAW,KAAKzE,KAAL,CAAWQ,UAAX,CAAsBmE,MAAtB,CAA+B,CAA5F,CAA+F;AAC7F,MAAO,CAACF,MAAD,CAAS,CAAT,CAAP;AACD,CAFD,IAEO,IAAIA,OAAS,KAAKzE,KAAL,CAAWQ,UAAX,CAAsBmE,MAAtB,CAA+B,CAA5C,CAA+C;AACpD,MAAO,CAAC,CAAD,CAAI,CAAJ,CAAP;AACD;AACD,MAAO,CAACF,MAAD,CAASC,OAAT,CAAP;AACD,C;;AAEQ;AACP;AACI;AACE,MAAO,CAAE5D,SAAU,UAAZ,CAAwB8D,cAAe,QAAvC,CADT;;AAGK,KAAK3E,KAAL,CAAWM,YAAZ,GAA8BgD,SAA9B;AACC,qDADD;;AAGC;;AAEE,KAAKtD,KAAL,CAAWQ,aAAZ;AACA,oDAAU,IAAV;AACE,MAAO;AACL,KAAKoE,aAAL,GAAqB,CAArB,CADK;AAEL,KAAKC,eAAL,GAAuBjE,OAFlB;AAGL,CAAEmD,QAAS,KAAK/D,KAAL,CAAWW,QAAtB,CAHK,CADT;AAKM,KAAKqB,aAAL,CAAmB8C,WALzB;;AAOM,KAAK/E,KAAL,CAAWgF,YAAZ;AACG,KAAKhF,KAAL,CAAWgF,YAAX,CAAwB,KAAK/E,KAAL,CAAWQ,aAAnC,CADH;;AAGG,KAAKT,KAAL,CAAWiF,UAAX,CAAsB,KAAKhF,KAAL,CAAWQ,aAAjC,CAVR,CAHD;;;AAgBC,oDAAU,IAAV;AACE,MAAO;AACL,KAAKoE,aAAL,GAAqB,CAArB,CADK;AAEL,KAAKC,eAAL,GAAuBjE,OAFlB,CADT;AAIM,KAAKoB,aAAL,CAAmB8C,WAJzB;;AAMI,KAAK/E,KAAL,CAAWkF,SAAZ;AACK,KAAKlF,KAAL,CAAWkF,SAAX,CAAqB,KAAKjF,KAAL,CAAWM,YAAhC,CADL;;AAGK,KAAKP,KAAL,CAAWiF,UAAX,CAAsB,KAAKhF,KAAL,CAAWM,YAAjC,CATR,CAhBD,CANL,CADJ;;;;;;;;AAwCD,C;;;;AAIHR,WAAWoF,SAAX;AACK,kBAAKA,SADV;AAEEC,MAAO,gBAAMC,SAAN,CAAgBC,MAFzB;AAGE9E,WAAY,gBAAM6E,SAAN,CAAgBE,KAH9B;;;AAMA,GAAMC,kBAAmB,yCAAa,uBAAb,CAAsC,EAAtC,iCAAgEzF,UAAhE,CAAzB,C;;;AAGsBA,U,CAApByF,gB","file":"DeckSwiper.js","sourcesContent":["import React, { Component } from 'react';\nimport { View, Animated, PanResponder } from 'react-native';\nimport clamp from 'clamp';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\nconst SWIPE_THRESHOLD = 120;\n\nclass DeckSwiper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pan: new Animated.ValueXY(),\n      pan2: new Animated.ValueXY(),\n      enter: new Animated.Value(0.8),\n      selectedItem: this.props.dataSource[0],\n      selectedItem2: this.props.dataSource[1],\n      card1Top: true,\n      card2Top: false,\n      fadeAnim: new Animated.Value(0.8),\n    };\n  }\n\n  getInitialStyle() {\n    return {\n      topCard: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        left: 0,\n      },\n    };\n  }\n\n  swipeLeft() {\n    if (this.props.onSwiping) {\n      this.props.onSwiping('left');\n    }\n    setTimeout(() => {\n      Animated.timing(\n        this.state.fadeAnim,\n        { toValue: 1 }\n      ).start();\n      Animated.spring(\n        this.state.enter,\n        { toValue: 1, friction: 7 }\n      ).start();\n      this.selectNext();\n      Animated.decay(this.state.pan, {\n        velocity: { x: -8, y: 1 },\n        deceleration: 0.98\n      }).start(this._resetState.bind(this))\n    }, 300);\n  }\n\n  componentWillMount() {\n      this._panResponder = PanResponder.create({\n        onMoveShouldSetResponderCapture: () => true,\n        onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n          return Math.abs(gestureState.dx) > 5;\n        },\n\n        onPanResponderGrant: (e, gestureState) => {\n          this.state.pan.setOffset({ x: this.state.pan.x._value, y: this.state.pan.y._value });\n          this.state.pan.setValue({ x: 0, y: 0 });\n        },\n\n\n        onPanResponderMove: (e, gestureState) => {\n          if (gestureState.dx > 20) {\n            if (this.props.onSwiping) {\n              this.props.onSwiping('right', gestureState.dx);\n            }\n          } else if (gestureState.dx < -20) {\n            if (this.props.onSwiping) {\n              this.props.onSwiping('left', gestureState.dx);\n            }\n          }\n          let val = Math.abs((gestureState.dx * 0.0013));\n          const opa = Math.abs((gestureState.dx * 0.0022));\n          if (val > 0.2) {\n            val = 0.2;\n          }\n          Animated.timing(\n              this.state.fadeAnim,\n              { toValue: 0.8 + val }\n          ).start();\n          Animated.spring(\n              this.state.enter,\n              { toValue: 0.8 + val, friction: 7 }\n          ).start();\n          Animated.event([\n            null, { dx: this.state.pan.x },\n          ])(e, gestureState)\n        },\n\n        onPanResponderRelease: (e, { vx, vy }) => {\n          if (this.props.onSwiping) {\n            this.props.onSwiping(null);\n          }\n          let velocity;\n\n          if (vx >= 0) {\n            velocity = clamp(vx, 4.5, 10);\n          } else if (vx < 0) {\n            velocity = clamp(vx * -1, 4.5, 10) * -1;\n          }\n          if (Math.abs(this.state.pan.x._value) > SWIPE_THRESHOLD) {\n            if (velocity > 0) {\n              (this.props.onSwipeRight) ? this.props.onSwipeRight() : undefined;\n              this.selectNext();\n            } else {\n              (this.props.onSwipeLeft) ? this.props.onSwipeLeft() : undefined;\n              this.selectNext();\n            }\n            Animated.decay(this.state.pan, {\n              velocity: { x: velocity, y: vy },\n              deceleration: 0.98,\n            }).start(this._resetState.bind(this));\n          } else {\n            Animated.spring(this.state.pan, {\n              toValue: { x: 0, y: 0 },\n              friction: 4,\n            }).start();\n          }\n        },\n      });\n  }\n\n  _resetState() {\n    this.state.pan.setValue({ x: 0, y: 0 });\n    this.state.enter.setValue(0.8);\n    this.state.fadeAnim.setValue(0.8);\n    this.setState({\n      card1Top: !this.state.card1Top,\n      card2Top: !this.state.card2Top\n    });\n    if (this.props.onSwiping) {\n      this.props.onSwiping(null);\n    }\n  }\n  getCardStyles() {\n    const { pan, pan2, enter } = this.state;\n\n    const [translateX, translateY] = [pan.x, pan.y];\n    // const [translateX, translateY] = [pan2.x, pan2.y];\n\n    const rotate = pan.x.interpolate({ inputRange: [-700, 0, 700], outputRange: ['-10deg', '0deg', '10deg'] });\n\n    const opacity = pan.x.interpolate({ inputRange: [-320, 0, 320], outputRange: [0.9, 1, 0.9] });\n    const scale = enter;\n\n    const animatedCardStyles = { transform: [{ translateX }, { translateY }, { rotate }], opacity };\n    const animatedCardStyles2 = { transform: [{ scale }] };\n\n    return [animatedCardStyles, animatedCardStyles2];\n  }\n  swipeRight() {\n    if (this.props.onSwiping) {\n      this.props.onSwiping('right');\n    }\n    setTimeout(() => {\n      Animated.timing(\n        this.state.fadeAnim,\n        { toValue: 1 }\n      ).start();\n      Animated.spring(\n        this.state.enter,\n        { toValue: 1, friction: 7 }\n      ).start();\n      this.selectNext();\n      Animated.decay(this.state.pan, {\n        velocity: { x: 8, y: 1 },\n        deceleration: 0.98\n      }).start(this._resetState.bind(this))\n    }, 300);\n  }\n  selectNext() {\n    const nextIndexes = this.findNextIndexes();\n    setTimeout(() => {\n      this.setState({\n        selectedItem: this.props.dataSource[nextIndexes[0]]\n      });\n      setTimeout(() => {\n        this.setState({\n          selectedItem2: this.props.dataSource[nextIndexes[1]]\n        });\n      }, 350);\n    }, 50);\n  }\n  findNextIndexes() {\n    const currentIndex = this.props.dataSource.indexOf(this.state.selectedItem);\n    const newIdx = currentIndex + 1;\n    const newIdx2 = currentIndex + 2;\n\n    if (newIdx2 > this.props.dataSource.length - 1 && newIdx === this.props.dataSource.length - 1) {\n      return [newIdx, 0];\n    } else if (newIdx > this.props.dataSource.length - 1) {\n      return [0, 1];\n    }\n    return [newIdx, newIdx2];\n  }\n\n  render() {\n    return (\n        <View\n          style={{ position: 'relative', flexDirection: 'column' }}\n        >\n          { (this.state.selectedItem) === undefined ?\n            (<View />)\n            :\n            (<View>\n              {\n              (this.state.selectedItem2) &&\n              <Animated.View\n                style={[\n                  this.getCardStyles()[1],\n                  this.getInitialStyle().topCard,\n                  { opacity: this.state.fadeAnim }]}\n                {...this._panResponder.panHandlers}\n              >\n                  {(this.props.renderBottom) ?\n                      this.props.renderBottom(this.state.selectedItem2)\n                    :\n                      this.props.renderItem(this.state.selectedItem2)\n                    }\n                </Animated.View>}\n              <Animated.View\n                style={[\n                  this.getCardStyles()[0],\n                  this.getInitialStyle().topCard]}\n                {...this._panResponder.panHandlers}\n              >\n                {(this.props.renderTop) ?\n                      this.props.renderTop(this.state.selectedItem)\n                    :\n                      this.props.renderItem(this.state.selectedItem)\n                    }\n              </Animated.View>\n            </View>\n            )\n        }\n        </View>\n    );\n  }\n\n}\n\nDeckSwiper.propTypes = {\n  ...View.propTypes,\n  style: React.PropTypes.object,\n  dataSource: React.PropTypes.array,\n};\n\nconst StyledDeckSwiper = connectStyle('NativeBase.DeckSwiper', {}, mapPropsToStyleNames)(DeckSwiper);\n\nexport {\n  StyledDeckSwiper as DeckSwiper,\n};\n"]}