{"version":3,"sources":["../../../../src/basic/Icon/index.js"],"names":["Icon","variables","context","theme","platformStyle","platform","iconFamily","props","name","active","ios","default","android","_root","c","OS","getIconName","getName","contextTypes","PropTypes","object","propTypes","style","string","bool","StyledIcon"],"mappings":"8yBAAA,4B;;AAEA;AACA;;AAEA;;AAEA,uC;AACA,0D;AACA,8B;;AAEA,sE;;AAEMA,I;;;;;AAKM;AACR,GAAMC,WAAa,KAAKC,OAAL,CAAaC,KAAd,CAAuB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAxE,mBAAlB;AACA,GAAMG,eAAgBH,UAAUG,aAAhC;AACA,GAAMC,UAAWJ,UAAUI,QAA3B;;AAEA,GAAIJ,UAAUK,UAAV,GAAuB,UAA3B,CAAuC;AACrC,GAAI,MAAO,mBAAG,KAAKC,KAAL,CAAWC,IAAd,CAAP,GAA6B,QAAjC,CAA4C;AAC1C,MAAO,MAAKD,KAAL,CAAWC,IAAlB;AACD,CAFD;AAGK,GAAI,MAAO,mBAAG,KAAKD,KAAL,CAAWC,IAAd,CAAP,GAA6B,QAAjC,CAA2C;AAC9C,GAAIA,YAAJ;AACA,GAAKJ,gBAAkB,KAAnB,EAA8BA,gBAAkB,UAApD,CAAkE;AAChEI,KAAQ,KAAKD,KAAL,CAAWE,MAAZ,CAAsB,kBAAG,KAAKF,KAAL,CAAWC,IAAd,EAAoBE,GAApB,CAAwBD,MAA9C,CAAuD,kBAAG,KAAKF,KAAL,CAAWC,IAAd,EAAoBE,GAApB,CAAwBC,OAAtF;AACD,CAFD,IAEO;AACLH,KAAQ,KAAKD,KAAL,CAAWE,MAAZ,CAAsB,kBAAG,KAAKF,KAAL,CAAWC,IAAd,EAAoBI,OAApB,CAA4BH,MAAlD,CAA2D,kBAAG,KAAKF,KAAL,CAAWC,IAAd,EAAoBI,OAApB,CAA4BD,OAA9F;AACD;AACD,MAAOH,KAAP;AACD;AACF,CAbD;AAcK;AACH,MAAO,MAAKD,KAAL,CAAWC,IAAlB;AACD;AACF,C;;AAEa;AACZ,GAAIJ,gBAAkB,KAAtB,CAA6B;AAC3B,GAAI,KAAKG,KAAL,CAAWG,GAAf,CAAoB;AAClB,MAAO,MAAKH,KAAL,CAAWG,GAAlB;AACD,CAFD,IAEO;AACL,MAAQ,MAAKH,KAAL,CAAWE,MAAZ;AACP,kBAAG,KAAKF,KAAL,CAAWC,IAAd,EAAoBE,GAApB,CAAwBD,MADjB,CAC0B,kBAAG,KAAKF,KAAL,CAAWC,IAAd,EAAoBE,GAApB,CAAwBC,OADzD;AAED;AACF,CAPD,IAOO,IAAG,KAAKJ,KAAL,CAAWK,OAAd,CAAuB;AAC5B,MAAO,MAAKL,KAAL,CAAWK,OAAlB;AACD,CAFM,IAEA;AACL,MAAQ,MAAKL,KAAL,CAAWE,MAAZ;AACP,kBAAG,KAAKF,KAAL,CAAWC,IAAd,EAAoBI,OAApB,CAA4BH,MADrB,CAC8B,kBAAG,KAAKF,KAAL,CAAWC,IAAd,EAAoBI,OAApB,CAA4BD,OADjE;AAED;AACF,C;;AAEQ;AACL,GAAI,KAAKJ,KAAL,CAAWG,GAAX,EAAkB,KAAKH,KAAL,CAAWK,OAAjC,CAA0C;AACxC;AACE,uDAAQ,IAAK,sBAAK,QAAKC,KAAL,CAAaC,CAAlB,EAAb,EAAsC,KAAKP,KAA3C,EAAkD,KAAO,sBAASQ,EAAT,GAAgB,KAAjB,CAA0B,KAAKR,KAAL,CAAWG,GAArC,CAA2C,KAAKH,KAAL,CAAWK,OAA9G,GADF;;AAGD,CAJD,IAIO,IAAI,KAAKL,KAAL,CAAWC,IAAX,GAAoB,KAAKD,KAAL,CAAWK,OAAX,EAAsB,KAAKL,KAAL,CAAWG,GAArD,CAAJ,CAA+D;AACpE;AACE,uDAAQ,IAAK,sBAAK,QAAKG,KAAL,CAAaC,CAAlB,EAAb,EAAsC,KAAKP,KAA3C,EAAkD,KAAM,KAAKS,WAAL,EAAxD,GADF;;AAGD,CAJM,IAIA;AACL;AACE,uDAAQ,IAAK,sBAAK,QAAKH,KAAL,CAAaC,CAAlB,EAAb,EAAsC,KAAKP,KAA3C,EAAkD,KAAM,KAAKU,OAAL,EAAxD,GADF;;AAGD;AACF,C,oCA3DCjB,I,CACGkB,Y,CAAe,CACpBf,MAAO,gBAAMgB,SAAN,CAAgBC,MADH,C;;;AA6DxBpB,KAAKqB,SAAL;AACK,eAAOA,SADZ;AAEEC,MAAO,gBAAMH,SAAN,CAAgBC,MAFzB;AAGEZ,KAAM,gBAAMW,SAAN,CAAgBI,MAHxB;AAIEb,IAAK,gBAAMS,SAAN,CAAgBI,MAJvB;AAKEX,QAAS,gBAAMO,SAAN,CAAgBI,MAL3B;AAMEd,OAAQ,gBAAMU,SAAN,CAAgBK,IAN1B;;;AASA,GAAMC,YAAa,wBAAa,iBAAb,CAAgC,EAAhC,iCAA0DzB,IAA1D,CAAnB,C;;;AAGgBA,I,CAAdyB,U","file":"index.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { Platform } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\n\nimport { IconNB } from '../IconNB';\n// import { Icon } from '../Icon.web';\nimport ic from './NBIcons.json';\nimport variable from './../../theme/variables/platform';\nimport _ from 'lodash';\n\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\n\nclass Icon extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object,\n  }\n\n  getName() {\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n\n    if (variables.iconFamily==='Ionicons') {\n      if (typeof ic[this.props.name]!=='object' ) {\n        return this.props.name;\n      }\n      else if (typeof ic[this.props.name]==='object') {\n        let name;\n        if ((platformStyle === 'ios') && (platformStyle !== 'material') ) {\n          name = (this.props.active) ? ic[this.props.name].ios.active : ic[this.props.name].ios.default;\n        } else {\n          name = (this.props.active) ? ic[this.props.name].android.active : ic[this.props.name].android.default;\n        }\n        return name;\n      }\n    }\n    else {\n      return this.props.name;\n    }\n  }\n\n  getIconName() {\n    if (platformStyle === 'ios') {\n      if (this.props.ios) {\n        return this.props.ios;\n      } else {\n        return (this.props.active) ?\n        ic[this.props.name].ios.active : ic[this.props.name].ios.default;\n      }\n    } else if(this.props.android) {\n      return this.props.android;\n    } else {\n      return (this.props.active) ?\n      ic[this.props.name].android.active : ic[this.props.name].android.default;\n    }\n  }\n\n  render() {\n      if (this.props.ios && this.props.android) {\n        return (\n          <IconNB ref={c => this._root = c} {...this.props} name={(Platform.OS === 'ios') ? this.props.ios : this.props.android} />\n        );\n      } else if (this.props.name && (this.props.android || this.props.ios)) {\n        return (\n          <IconNB ref={c => this._root = c} {...this.props} name={this.getIconName()} />\n        );\n      } else {\n        return (\n          <IconNB ref={c => this._root = c} {...this.props} name={this.getName()} />\n        );\n      }\n    }\n}\n\nIcon.propTypes = {\n  ...IconNB.propTypes,\n  style: React.PropTypes.object,\n  name: React.PropTypes.string,\n  ios: React.PropTypes.string,\n  android: React.PropTypes.string,\n  active: React.PropTypes.bool,\n};\n\nconst StyledIcon = connectStyle('NativeBase.Icon', {}, mapPropsToStyleNames)(Icon);\n\nexport {\n  StyledIcon as Icon,\n};\n"]}