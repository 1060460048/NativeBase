{"version":3,"sources":["../../../../src/basic/Icon/index.js"],"names":["Icon","variables","context","theme","platformStyle","platform","iconFamily","props","name","active","ios","default","android","OS","c","_root","getIconName","getName","contextTypes","PropTypes","object","propTypes","style","string","bool","StyledIcon"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { Platform } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport { IconNB } from '../IconNB';\nimport ic from './NBIcons.json';\nimport variable from './../../theme/variables/platform';\n\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\n\nclass Icon extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object,\n  }\n\n  getName() {\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n    if (variables.iconFamily === 'Ionicons') {\n      if (typeof ic[this.props.name] !== 'object') {\n        return this.props.name;\n      } else if (typeof ic[this.props.name] === 'object') {\n        let name;\n        if ((platform === 'ios') && (platformStyle !== 'material')) {\n          name = (this.props.active) ?\n                 ic[this.props.name].ios.active : ic[this.props.name].ios.default;\n        } else {\n          name = (this.props.active) ?\n                 ic[this.props.name].android.active : ic[this.props.name].android.default;\n        }\n        return name;\n      }\n    } else {\n      return this.props.name;\n    }\n  }\n\n  getIconName() {\n    if (Platform.OS === 'ios') {\n      if (this.props.ios) {\n        return this.props.ios;\n      }\n      return (this.props.active) ?\n        ic[this.props.name].ios.active : ic[this.props.name].ios.default;\n    } else if (this.props.android) {\n      return this.props.android;\n    }\n    return (this.props.active) ?\n      ic[this.props.name].android.active : ic[this.props.name].android.default;\n  }\n\n  render() {\n    if (this.props.ios && this.props.android) {\n      return (\n        <IconNB ref={(c) => { this._root = c; }} {...this.props} name={(Platform.OS === 'ios') ? this.props.ios : this.props.android} />\n      );\n    } else if (this.props.name && (this.props.android || this.props.ios)) {\n      return (\n        <IconNB ref={(c) => { this._root = c; }} {...this.props} name={this.getIconName()} />\n      );\n    }\n    return (\n      <IconNB ref={(c) => { this._root = c; }} {...this.props} name={this.getName()} />\n    );\n  }\n}\n\nIcon.propTypes = {\n  ...IconNB.propTypes,\n  style: React.PropTypes.object,\n  name: React.PropTypes.string,\n  ios: React.PropTypes.string,\n  android: React.PropTypes.string,\n  active: React.PropTypes.bool,\n};\n\nconst StyledIcon = connectStyle('NativeBase.Icon', {}, mapPropsToStyleNames)(Icon);\n\nexport {\n  StyledIcon as Icon,\n};\n"]}