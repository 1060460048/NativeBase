{"version":3,"sources":["../../../src/basic/Radio.js"],"names":["Radio","variables","context","theme","platformStyle","platform","_root","c","props","selected","color","brandPrimary","lineHeight","height","fontSize","radioBtnSize","radioSelectedColorAndroid","undefined","radioBtnLineHeight","contextTypes","PropTypes","object","propTypes","bool","string","StyledRadio"],"mappings":"+yBAAA,4B;AACA;AACA;AACA,4D;AACA,mE;AACA,qD;;AAEMA,K;;;;;AAKK;AACP,GAAMC,WAAa,KAAKC,OAAL,CAAaC,KAAd,CAAuB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAxE,mBAAlB;AACA,GAAMG,eAAgBH,UAAUG,aAAhC;AACA,GAAMC,UAAWJ,UAAUI,QAA3B;;AAEA;AACE,sEAAkB,IAAK,sBAAK,QAAKC,KAAL,CAAaC,CAAlB,EAAvB,EAAgD,KAAKC,KAArD;AACIJ,gBAAkB,KAAnB;AACE,KAAKI,KAAL,CAAWC,QAAZ,EAAyB;AACzB,MAAO;AACLC,MAAOT,UAAUU,YADZ;AAELC,WAAY,EAFP;AAGLC,OAAQ,EAHH;AAILC,SAAUb,UAAUc,YAJf,CADkB;;AAOzB,KAAK,eAPoB,EAD1B;;AAUC;AACE,MAAO;AACLL,MAAQ,KAAKF,KAAL,CAAWC,QAAZ,CAAwBR,UAAUe,yBAAlC,CAA8DC,SADhE;AAELL,WAAYX,UAAUiB,kBAFjB;AAGLJ,SAAUb,UAAUc,YAHf,CADT;;AAME,KAAM,KAAKP,KAAL,CAAWC,QAAX,CAAsB,oBAAtB,CAA6C,qBANrD,EAXJ,CADF;;;;AAsBD,C,qCAhCGT,K,CACGmB,Y,CAAe,CACpBhB,MAAO,gBAAMiB,SAAN,CAAgBC,MADH,C;;;AAkCxBrB,MAAMsB,SAAN;AACK,8BAAiBA,SADtB;AAEEb,SAAU,gBAAMW,SAAN,CAAgBG,IAF5B;AAGEb,MAAO,gBAAMU,SAAN,CAAgBI,MAHzB;;;AAMA,GAAMC,aAAc,wBAAa,kBAAb,CAAiC,EAAjC,iCAA2DzB,KAA3D,CAApB,C;;;AAGiBA,K,CAAfyB,W","file":"Radio.js","sourcesContent":["import React, { Component } from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\n\nclass Radio extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object,\n  }\n\n  render() {\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n\n    return (\n      <TouchableOpacity ref={c => this._root = c} {...this.props}>\n        {(platformStyle === 'ios') ?\n          (this.props.selected) && <Icon\n          style={{\n            color: variables.brandPrimary,\n            lineHeight: 25,\n            height: 20,\n            fontSize: variables.radioBtnSize,\n          }}\n          name=\"ios-checkmark\" />\n          :\n          <Icon\n            style={{\n              color: (this.props.selected) ? variables.radioSelectedColorAndroid : undefined,\n              lineHeight: variables.radioBtnLineHeight,\n              fontSize: variables.radioBtnSize,\n            }}\n            name={this.props.selected ? 'md-radio-button-on' : 'md-radio-button-off'}  />\n        }\n      </TouchableOpacity>\n    );\n  }\n}\n\nRadio.propTypes = {\n  ...TouchableOpacity.propTypes,\n  selected: React.PropTypes.bool,\n  color: React.PropTypes.string,\n};\n\nconst StyledRadio = connectStyle('NativeBase.Radio', {}, mapPropsToStyleNames)(Radio);\n\nexport {\n  StyledRadio as Radio,\n};\n"]}