{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["React","require","ReactNative","View","Animated","Button","DefaultTabBar","createClass","propTypes","goToPage","PropTypes","func","activeTab","number","tabs","array","backgroundColor","string","activeTextColor","inactiveTextColor","tabStyle","style","renderTab","underlineStyle","contextTypes","theme","object","getDefaultProps","topTabBarActiveTextColor","topTabBarTextColor","renderTabOption","name","page","isTabActive","onPressHandler","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","headerContent","props","children","undefined","textColor","fontWeight","flex","random","render","variables","context","containerWidth","numberOfTabs","length","tabUnderlineStyle","position","width","height","topTabBarActiveBorderColor","bottom","left","scrollValue","interpolate","inputRange","outputRange","map","StyledTab","mapPropsToStyleNames"],"mappings":"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","file":"DefaultTabBar.js","sourcesContent":["import _ from 'lodash';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading, Text, TabContainer } from './../../index';\n\nconst React = require('react');\nconst ReactNative = require('react-native');\n\n\nconst {\n  View,\n  Animated,\n} = ReactNative;\nconst Button = require('./Button');\n\nconst DefaultTabBar = React.createClass({\n  propTypes: {\n    goToPage: React.PropTypes.func,\n    activeTab: React.PropTypes.number,\n    tabs: React.PropTypes.array,\n    backgroundColor: React.PropTypes.string,\n    activeTextColor: React.PropTypes.string,\n    inactiveTextColor: React.PropTypes.string,\n    tabStyle: View.propTypes.style,\n    renderTab: React.PropTypes.func,\n    underlineStyle: View.propTypes.style,\n  },\n  contextTypes: {\n    theme: React.PropTypes.object,\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      backgroundColor: null,\n    };\n  },\n\n  renderTabOption(name, page) {\n  },\n\n  renderTab(\n           name,\n           page,\n           isTabActive,\n           onPressHandler,\n           tabStyle,\n           activeTabStyle,\n           textStyle,\n           activeTextStyle,\n           tabHeaderStyle) {\n    const headerContent = (typeof name !== 'string') ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n    if (typeof name === 'string') {\n      return (<Button\n        style={{ flex: 1 }}\n        key={name}\n        onPress={() => onPressHandler(page)}\n      >\n        <TabHeading style={(isTabActive) ? activeTabStyle : tabStyle} active={isTabActive}>\n          <Text style={(isTabActive) ? activeTextStyle : textStyle}>\n            {name}\n          </Text>\n        </TabHeading>\n      </Button>);\n    }\n    return (<Button\n      style={{ flex: 1 }}\n      key={_.random(1.2, 5.2)}\n      onPress={() => onPressHandler(page)}\n    >\n      <TabHeading style={tabHeaderStyle} active={isTabActive}>\n        {headerContent}\n      </TabHeading>\n    </Button>);\n  },\n\n  render() {\n    const variables = (this.context.theme) ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0,\n    };\n\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1], outputRange: [0, containerWidth / numberOfTabs],\n    });\n    return (\n      <TabContainer>\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n                name,\n                page,\n                isTabActive,\n                this.props.goToPage,\n                this.props.tabStyle[page],\n                this.props.activeTabStyle[page],\n                this.props.textStyle[page],\n                this.props.activeTextStyle[page],\n                this.props.tabHeaderStyle[page]);\n        })}\n        <Animated.View style={[tabUnderlineStyle, { left }, this.props.underlineStyle]} />\n      </TabContainer>\n    );\n  },\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle('NativeBase.DefaultTabBar', {}, mapPropsToStyleNames)(DefaultTabBar);\nexport {\n  StyledTab as DefaultTabBar,\n};\n"]}